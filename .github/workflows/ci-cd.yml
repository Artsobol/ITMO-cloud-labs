name: good ci/cd

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.8
        uses: actions/setup-python@v3
        with:
          python-version: 3.8

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Create virtual environment
        run: python -m venv venv

      - name: Install dependencies
        run: |
          venv/bin/pip install -r lab3/good_cicd/requirements.txt

      - name: Test
        env:
          PYTHONPATH: .
        run: |
          venv/bin/pytest lab3/good_cicd/tests --cov=lab3/good_cicd/src

  deploy:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-20.04
    needs: build
  
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Doppler CLI
        uses: dopplerhq/cli-action@v3


      - name: Authenticate with Doppler
        env:
          DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}
        run: doppler setup --token $DOPPLER_TOKEN --no-prompt


      - name: Build Docker Image
        run: |
          docker build -t myapp -f lab3/good_cicd/Dockerfile lab3/good_cicd

      - name: Deploy
        env:
          DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}
        run: |
          echo "Fetching secrets..."
          DOCKER_USERNAME=$(doppler secrets get DOCKER_USERNAME --plain)
          DOCKER_PASSWORD=$(doppler secrets get DOCKER_PASSWORD --plain)

          echo "Deploying..."
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
          docker tag myapp $DOCKER_USERNAME/myapp:latest
          docker push $DOCKER_USERNAME/myapp:latest

      - name: Clean up environment
        run: |
          rm -rf dist build *.egg-info
          docker logout
